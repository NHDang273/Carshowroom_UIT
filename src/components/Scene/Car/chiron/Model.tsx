/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Body_Body_0: THREE.Mesh
    Body_Carbon_0: THREE.Mesh
    Body_Darker_Parts_0: THREE.Mesh
    Body_Silver_0: THREE.Mesh
    Brake_rotor_BL_Brake_rotor_0: THREE.Mesh
    Brake_rotor_BL_Caliper_0: THREE.Mesh
    Brake_rotor_BL001_Brake_rotor_0: THREE.Mesh
    Brake_rotor_BL001_Caliper_0: THREE.Mesh
    Brake_rotor_FL_Brake_rotor_0: THREE.Mesh
    Brake_rotor_FL_Caliper_0: THREE.Mesh
    Brake_rotor_FR_Brake_rotor_0: THREE.Mesh
    Brake_rotor_FR_Caliper_0: THREE.Mesh
    ['Door-left_Body_0']: THREE.Mesh
    ['Door-left_Carbon_0']: THREE.Mesh
    ['Door-left_Darker_Parts_0']: THREE.Mesh
    ['Door-left_Glass_0']: THREE.Mesh
    ['Door-left_Interior_2_0']: THREE.Mesh
    ['Door-left_Interior_3_0']: THREE.Mesh
    ['Door-left_Mirror_0']: THREE.Mesh
    ['Door-left_Plastic_0']: THREE.Mesh
    ['Door-left_Silver_0']: THREE.Mesh
    ['Door-left_Turning_lights_left_0']: THREE.Mesh
    ['Door-left_Windshield_0']: THREE.Mesh
    ['Door-right_Body_0']: THREE.Mesh
    ['Door-right_Carbon_0']: THREE.Mesh
    ['Door-right_Darker_Parts_0']: THREE.Mesh
    ['Door-right_Glass_0']: THREE.Mesh
    ['Door-right_Interior_2_0']: THREE.Mesh
    ['Door-right_Interior_3_0']: THREE.Mesh
    ['Door-right_Mirror_0']: THREE.Mesh
    ['Door-right_Plastic_0']: THREE.Mesh
    ['Door-right_Silver_0']: THREE.Mesh
    ['Door-right_Turning_lights_right_0']: THREE.Mesh
    ['Door-right_Windshield_0']: THREE.Mesh
    Engine_Carbon_0: THREE.Mesh
    Engine_Interior_2_0: THREE.Mesh
    Engine_Logo_0: THREE.Mesh
    Engine_Plastic_0: THREE.Mesh
    Engine_Silver_0: THREE.Mesh
    Headlight_Glass_0: THREE.Mesh
    Headlight_Headlight_glass_0: THREE.Mesh
    ['Headlight_Headlights-light_0']: THREE.Mesh
    ['Headlight_Headlights-Lights_0']: THREE.Mesh
    Headlight_Headlights_0: THREE.Mesh
    Headlight_Turning_lights_left_0: THREE.Mesh
    Headlight_Turning_lights_right_0: THREE.Mesh
    Interior_Buttons_0: THREE.Mesh
    Interior_Interior_1_Darker_0: THREE.Mesh
    Interior_Interior_1_0: THREE.Mesh
    Interior_Interior_2_0: THREE.Mesh
    Interior_Interior_3_0: THREE.Mesh
    ['Interior_Interior-light_0']: THREE.Mesh
    Interior_Mirror_0: THREE.Mesh
    Interior_Plastic_0: THREE.Mesh
    Interior_seats_0: THREE.Mesh
    Interior_Silver_0: THREE.Mesh
    Interior_Speedo_0: THREE.Mesh
    ['Plastic-parts_Carbon_0']: THREE.Mesh
    ['Plastic-parts_exhaust_0']: THREE.Mesh
    ['Plastic-parts_Headlight-1_0']: THREE.Mesh
    ['Plastic-parts_Plastic_0']: THREE.Mesh
    ['Plastic-parts_Vents-texture_0']: THREE.Mesh
    ['Spoiler-base-1_Steel_0']: THREE.Mesh
    ['Spoiler-base-2_Steel_0']: THREE.Mesh
    spoiler_Darker_Parts_0: THREE.Mesh
    ['Spoiler-base-3_Steel_0']: THREE.Mesh
    ['Steering-wheel_Interior_1_Darker_0']: THREE.Mesh
    ['Steering-wheel_Interior_1_0']: THREE.Mesh
    ['Steering-wheel_Interior_3_0']: THREE.Mesh
    ['Steering-wheel_Plastic_0']: THREE.Mesh
    ['Steering-wheel_Silver_0']: THREE.Mesh
    ['Tail-light_Brake-lights_0']: THREE.Mesh
    ['Tail-light_Reverse-light001_0']: THREE.Mesh
    ['Tail-light_Tail-light-glass-turning_0']: THREE.Mesh
    ['Tail-light_Tail-light-glass_0']: THREE.Mesh
    ['Tail-light_Tail-light-insides_0']: THREE.Mesh
    ['Tail-light_Tail-light-LIGHT_0']: THREE.Mesh
    ['Tail-light_Tail-light_holder_0']: THREE.Mesh
    ['Tail-light_Turning_lights_left_0']: THREE.Mesh
    ['Vents_Vents-texture_0']: THREE.Mesh
    ['Wheel-BL_Rims_0']: THREE.Mesh
    ['Wheel-BL_Tire_0']: THREE.Mesh
    ['Wheel-BR_Rims_0']: THREE.Mesh
    ['Wheel-BR_Tire_0']: THREE.Mesh
    ['Wheel-FL_Rims_0']: THREE.Mesh
    ['Wheel-FL_Tire_0']: THREE.Mesh
    ['Wheel-FR_Rims_0']: THREE.Mesh
    ['Wheel-FR_Tire_0']: THREE.Mesh
    Windshields_Windshield_0: THREE.Mesh
  }
  materials: {
    Body: THREE.MeshStandardMaterial
    Carbon: THREE.MeshStandardMaterial
    Darker_Parts: THREE.MeshStandardMaterial
    Silver: THREE.MeshStandardMaterial
    Brake_rotor: THREE.MeshStandardMaterial
    Caliper: THREE.MeshStandardMaterial
    Glass: THREE.MeshStandardMaterial
    Interior_2: THREE.MeshStandardMaterial
    Interior_3: THREE.MeshStandardMaterial
    Mirror: THREE.MeshStandardMaterial
    Plastic: THREE.MeshStandardMaterial
    Turning_lights_left: THREE.MeshStandardMaterial
    Windshield: THREE.MeshPhysicalMaterial
    Turning_lights_right: THREE.MeshStandardMaterial
    Logo: THREE.MeshStandardMaterial
    Headlight_glass: THREE.MeshStandardMaterial
    ['Headlights-light']: THREE.MeshStandardMaterial
    ['Headlights-Lights']: THREE.MeshStandardMaterial
    Headlights: THREE.MeshStandardMaterial
    Buttons: THREE.MeshStandardMaterial
    Interior_1_Darker: THREE.MeshStandardMaterial
    Interior_1: THREE.MeshStandardMaterial
    ['Interior-light']: THREE.MeshStandardMaterial
    seats: THREE.MeshStandardMaterial
    Speedo: THREE.MeshStandardMaterial
    exhaust: THREE.MeshStandardMaterial
    ['Headlight-1']: THREE.MeshStandardMaterial
    ['Vents-texture']: THREE.MeshStandardMaterial
    Steel: THREE.MeshStandardMaterial
    ['Brake-lights']: THREE.MeshStandardMaterial
    ['Reverse-light.001']: THREE.MeshStandardMaterial
    ['Tail-light-glass-turning']: THREE.MeshStandardMaterial
    ['Tail-light-glass']: THREE.MeshStandardMaterial
    ['Tail-light-insides']: THREE.MeshStandardMaterial
    ['Tail-light-LIGHT']: THREE.MeshStandardMaterial
    ['Tail-light_holder']: THREE.MeshStandardMaterial
    Rims: THREE.MeshStandardMaterial
    Tire: THREE.MeshStandardMaterial
  }
}

export function Chiron(props: any) {
  const { nodes, materials } = useGLTF('/models/chiron_latest_4.glb') as GLTFResult

  useEffect(() => {
    // car paint
    Object.entries(materials).map((material) => {
      if (material[0] == "Body") {
        if (props.color.name =="temp1") {
          material[1].color = new THREE.Color(props.color.hexCode[0]);
        } else {
        material[1].color = new THREE.Color(props.color.hexCode);
        }
      }
      if(material[0]=="Darker_Parts"){
        if (props.color.name =="temp1") {
          material[1].color = new THREE.Color(props.color.hexCode[1]);
        } else {
        material[1].color = new THREE.Color(props.color.hexCode);
        }
      }
      // if(material[0]=="Silver"){
      //   material[1].color = new THREE.Color(props.color.hexCode);
      // }
      material[1].needsUpdate = true;
    });
  }, [materials, props]);

  return (
    <group {...props} dispose={null}>
      <group
        position={[-0.435931, -2.174078, -0.035167]}
        rotation={[Math.PI / 2, 0, -1.569881]}
        scale={[6.414445, 6.414445, 6.414446]}>
        <group rotation={[Math.PI, 0, 0]} scale={0.01}>
          <group position={[0, 0, -0.000004]}>
            <group
              position={[-0.046796, 0, -0.000103]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Body_Body_0.geometry}
                material={materials.Body}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Body_Carbon_0.geometry}
                material={materials.Carbon}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Body_Darker_Parts_0.geometry}
                material={materials.Darker_Parts}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Body_Silver_0.geometry}
                material={materials.Silver}
              />
            </group>
            <group
              position={[-66.862114, 91.675781, 25.432785]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Brake_rotor_BL_Brake_rotor_0.geometry}
                material={materials.Brake_rotor}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Brake_rotor_BL_Caliper_0.geometry}
                material={materials.Caliper}
              />
            </group>
            <group
              position={[66.862083, 91.675804, 25.432785]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Brake_rotor_BL001_Brake_rotor_0.geometry}
                material={materials.Brake_rotor}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Brake_rotor_BL001_Caliper_0.geometry}
                material={materials.Caliper}
              />
            </group>
            <group
              position={[66.875465, -95.142502, 25.353388]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Brake_rotor_FL_Brake_rotor_0.geometry}
                material={materials.Brake_rotor}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Brake_rotor_FL_Caliper_0.geometry}
                material={materials.Caliper}
              />
            </group>
            <group
              position={[-66.87545, -95.142532, 25.353388]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Brake_rotor_FR_Brake_rotor_0.geometry}
                material={materials.Brake_rotor}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Brake_rotor_FR_Caliper_0.geometry}
                material={materials.Caliper}
              />
            </group>
            <group
              position={[59.459938, -58.518364, 60.25013]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Body_0'].geometry}
                material={materials.Body}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Carbon_0'].geometry}
                material={materials.Carbon}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Darker_Parts_0'].geometry}
                material={materials.Darker_Parts}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Glass_0'].geometry}
                material={materials.Glass}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Interior_2_0'].geometry}
                material={materials.Interior_2}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Interior_3_0'].geometry}
                material={materials.Interior_3}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Mirror_0'].geometry}
                material={materials.Mirror}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Plastic_0'].geometry}
                material={materials.Plastic}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Silver_0'].geometry}
                material={materials.Silver}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Turning_lights_left_0'].geometry}
                material={materials.Turning_lights_left}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-left_Windshield_0'].geometry}
                material={materials.Windshield}
              />
            </group>
            <group
              position={[-59.553486, -58.518394, 60.25013]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Body_0'].geometry}
                material={materials.Body}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Carbon_0'].geometry}
                material={materials.Carbon}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Darker_Parts_0'].geometry}
                material={materials.Darker_Parts}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Glass_0'].geometry}
                material={materials.Glass}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Interior_2_0'].geometry}
                material={materials.Interior_2}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Interior_3_0'].geometry}
                material={materials.Interior_3}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Mirror_0'].geometry}
                material={materials.Mirror}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Plastic_0'].geometry}
                material={materials.Plastic}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Silver_0'].geometry}
                material={materials.Silver}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Turning_lights_right_0'].geometry}
                material={materials.Turning_lights_right}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Door-right_Windshield_0'].geometry}
                material={materials.Windshield}
              />
            </group>
            <group
              position={[-0.046796, 0, -0.000103]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Engine_Carbon_0.geometry}
                material={materials.Carbon}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Engine_Interior_2_0.geometry}
                material={materials.Interior_2}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Engine_Logo_0.geometry}
                material={materials.Logo}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Engine_Plastic_0.geometry}
                material={materials.Plastic}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Engine_Silver_0.geometry}
                material={materials.Silver}
              />
            </group>
            <group
              position={[-0.046796, 0, -0.000103]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Headlight_Glass_0.geometry}
                material={materials.Glass}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Headlight_Headlight_glass_0.geometry}
                material={materials.Headlight_glass}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Headlight_Headlights-light_0'].geometry}
                material={materials['Headlights-light']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Headlight_Headlights-Lights_0'].geometry}
                material={materials['Headlights-Lights']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Headlight_Headlights_0.geometry}
                material={materials.Headlights}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Headlight_Turning_lights_left_0.geometry}
                material={materials.Turning_lights_left}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Headlight_Turning_lights_right_0.geometry}
                material={materials.Turning_lights_right}
              />
            </group>
            <group
              position={[-0.046796, 0, -0.000103]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Buttons_0.geometry}
                material={materials.Buttons}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Interior_1_Darker_0.geometry}
                material={materials.Interior_1_Darker}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Interior_1_0.geometry}
                material={materials.Interior_1}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Interior_2_0.geometry}
                material={materials.Interior_2}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Interior_3_0.geometry}
                material={materials.Interior_3}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Interior_Interior-light_0'].geometry}
                material={materials['Interior-light']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Mirror_0.geometry}
                material={materials.Mirror}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Plastic_0.geometry}
                material={materials.Plastic}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_seats_0.geometry}
                material={materials.seats}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Silver_0.geometry}
                material={materials.Silver}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Interior_Speedo_0.geometry}
                material={materials.Speedo}
              />
            </group>
            <group
              position={[-0.046796, 0, -0.000103]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Plastic-parts_Carbon_0'].geometry}
                material={materials.Carbon}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Plastic-parts_exhaust_0'].geometry}
                material={materials.exhaust}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Plastic-parts_Headlight-1_0'].geometry}
                material={materials['Headlight-1']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Plastic-parts_Plastic_0'].geometry}
                material={materials.Plastic}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Plastic-parts_Vents-texture_0'].geometry}
                material={materials['Vents-texture']}
              />
            </group>
            <group
              position={[-0.000048, 129.146347, 51.077023]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Spoiler-base-1_Steel_0'].geometry}
                material={materials.Steel}
              />
              <group position={[0.012986, 0.234538, 0.080155]}>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes['Spoiler-base-3_Steel_0'].geometry}
                  material={materials.Steel}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.spoiler_Darker_Parts_0.geometry}
                  material={materials.Darker_Parts}
                  position={[-0.003562, -0.234538, -0.006846]}
                />
              </group>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Spoiler-base-2_Steel_0'].geometry}
                material={materials.Steel}
                position={[-0.038304, 0, 0.036805]}
              />
            </group>
            <group
              position={[26.851339, -45.587887, 49.328362]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Steering-wheel_Interior_1_Darker_0'].geometry}
                material={materials.Interior_1_Darker}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Steering-wheel_Interior_1_0'].geometry}
                material={materials.Interior_1}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Steering-wheel_Interior_3_0'].geometry}
                material={materials.Interior_3}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Steering-wheel_Plastic_0'].geometry}
                material={materials.Plastic}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Steering-wheel_Silver_0'].geometry}
                material={materials.Silver}
              />
            </group>
            <group
              position={[-0.046796, 0, -0.000103]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Tail-light_Brake-lights_0'].geometry}
                material={materials['Brake-lights']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Tail-light_Reverse-light001_0'].geometry}
                material={materials['Reverse-light.001']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Tail-light_Tail-light-glass-turning_0'].geometry}
                material={materials['Tail-light-glass-turning']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Tail-light_Tail-light-glass_0'].geometry}
                material={materials['Tail-light-glass']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Tail-light_Tail-light-insides_0'].geometry}
                material={materials['Tail-light-insides']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Tail-light_Tail-light-LIGHT_0'].geometry}
                material={materials['Tail-light-LIGHT']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Tail-light_Tail-light_holder_0'].geometry}
                material={materials['Tail-light_holder']}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Tail-light_Turning_lights_left_0'].geometry}
                material={materials.Turning_lights_left}
              />
            </group>
            <group
              position={[69.302261, 91.675797, 25.432789]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Wheel-BL_Rims_0'].geometry}
                material={materials.Rims}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Wheel-BL_Tire_0'].geometry}
                material={materials.Tire}
              />
            </group>
            <group
              position={[-69.302299, 91.675804, 25.432789]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Wheel-BR_Rims_0'].geometry}
                material={materials.Rims}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Wheel-BR_Tire_0'].geometry}
                material={materials.Tire}
              />
            </group>
            <group
              position={[69.288933, -95.142509, 25.35339]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Wheel-FL_Rims_0'].geometry}
                material={materials.Rims}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Wheel-FL_Tire_0'].geometry}
                material={materials.Tire}
              />
            </group>
            <group
              position={[-69.28891, -95.142509, 25.35339]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Wheel-FR_Rims_0'].geometry}
                material={materials.Rims}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes['Wheel-FR_Tire_0'].geometry}
                material={materials.Tire}
              />
            </group>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes['Vents_Vents-texture_0'].geometry}
              material={materials['Vents-texture']}
              position={[-0.046796, 0, -0.000103]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Windshields_Windshield_0.geometry}
              material={materials.Windshield}
              position={[-0.046796, 0, -0.000103]}
              rotation={[0, 0, -Math.PI / 2]}
              scale={99.999992}
            />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/chiron_latest_4.glb')
